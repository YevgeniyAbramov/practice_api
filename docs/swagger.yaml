definitions:
  models.CreateToDoReq:
    properties:
      description:
        description: Описание задачи
        type: string
      name:
        description: Название задачи
        type: string
      user_id:
        description: ID пользователя задачи
        type: integer
    type: object
  models.CreateUserRequest:
    properties:
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      login:
        example: johndoe
        type: string
    type: object
  models.ToDo:
    properties:
      created_at:
        description: Дата создания
        type: string
      deleted_at:
        description: Дата удаления (если есть)
        type: string
      description:
        description: Описание задачи
        type: string
      id:
        type: integer
      name:
        description: Название задачи
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.TodoStatus'
        description: Статус
      updated_at:
        description: Дата обновления
        type: string
      user_id:
        description: ID пользователя задачи
        type: integer
    type: object
  models.TodoStatus:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - StatusNew
    - StatusInProgress
    - StatusDone
  models.UpdateToDoReq:
    properties:
      description:
        description: Описание задачи
        type: string
      name:
        description: Название задачи
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.TodoStatus'
        description: Статус
    type: object
  models.UpdateUserRequest:
    properties:
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      login:
        example: johndoe
        type: string
    type: object
  models.User:
    properties:
      created_at:
        description: Дата создания
        type: string
      deleted_at:
        description: Дата удаления (если есть)
        type: string
      first_name:
        description: Имя пользователя
        type: string
      id:
        description: ID пользователя
        type: integer
      last_name:
        description: Фамилия пользователя
        type: string
      login:
        description: Логин пользователя
        type: string
      updated_at:
        description: Дата обновления
        type: string
    type: object
  response.APIResponse:
    properties:
      message:
        example: ok
        type: string
      result: {}
      status:
        example: true
        type: boolean
    type: object
  response.ErrorResponse:
    properties:
      message:
        example: something went wrong
        type: string
      status:
        example: false
        type: boolean
    type: object
info:
  contact: {}
paths:
  /status:
    get:
      description: Проверяет статус API
      responses: {}
      tags:
      - check status
  /v1/todo/create:
    post:
      consumes:
      - application/json
      description: Создает новую задачу
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateToDoReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                result:
                  $ref: '#/definitions/models.ToDo'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Создать задачу
      tags:
      - ToDo
  /v1/todo/get/{id}:
    get:
      consumes:
      - application/json
      description: Получает список задач
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.ToDo'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Получить список задач
      tags:
      - ToDo
  /v1/todo/update/{id}:
    put:
      consumes:
      - application/json
      description: Обновляет задачу
      parameters:
      - description: ID задачи
        in: path
        name: id
        required: true
        type: integer
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateToDoReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Обновить задачу
      tags:
      - ToDo
  /v1/users:
    get:
      description: Получает список всех пользователей
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Получить пользователей
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Создает нового пользователя
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.APIResponse'
            - properties:
                result:
                  $ref: '#/definitions/models.User'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Создать пользователя
      tags:
      - users
  /v1/users/restore/{id}:
    patch:
      consumes:
      - application/json
      description: Восстанавливает пользователя
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Восстановить пользователя
      tags:
      - users
  /v1/users/soft-delete/{id}:
    delete:
      consumes:
      - application/json
      description: Помечает пользователя как удаленого
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Удалить пользователя
      tags:
      - users
  /v1/users/update/{id}:
    put:
      consumes:
      - application/json
      description: Обновляет пользователя
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Обновить пользователя
      tags:
      - users
swagger: "2.0"
